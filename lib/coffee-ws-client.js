// Generated by CoffeeScript 1.6.2
(function() {
  var pack, unpack;

  pack = function(data) {
    return JSON.stringify(data);
  };

  unpack = function(data) {
    var err;

    try {
      return JSON.parse(data);
    } catch (_error) {
      err = _error;
      return null;
    }
  };

  window.Client = (function() {
    var events, onHold, ready;

    onHold = [];

    events = {};

    ready = false;

    function Client(addr) {
      var _this = this;

      this.ws = new WebSocket(addr);
      this.ws.onopen = function() {
        var msg, _i, _len;

        ready = true;
        for (_i = 0, _len = onHold.length; _i < _len; _i++) {
          msg = onHold[_i];
          _this.ws.send(msg);
        }
        return onHold = [];
      };
      this.ws.onmessage = function(message) {
        var data, fn;

        data = unpack(message.data);
        if (events[data.e] != null) {
          fn = events[data.e];
          return fn.call(_this, data.d);
        }
      };
    }

    Client.prototype.emit = function(event, data) {
      var message;

      message = pack({
        e: event,
        d: data
      });
      if (!ready) {
        return onHold.push(message);
      } else {
        return this.ws.send(message);
      }
    };

    Client.prototype.on = function(event, fn) {
      events[event] = fn;
      return this;
    };

    return Client;

  })();

}).call(this);
